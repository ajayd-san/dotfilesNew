# general {
#     lock_cmd = notify-send "lock!"          # dbus/sysd lock command (loginctl lock-session)
#     unlock_cmd = notify-send "unlock!"      # same as above, but unlock
#     before_sleep_cmd = notify-send "Zzz"    # command ran before sleep
#     after_sleep_cmd = notify-send "Awake!"  # command ran after sleep
#     ignore_dbus_inhibit = false             # whether to ignore dbus-sent idle-inhibit requests (used by e.g. firefox or steam)
#     ignore_systemd_inhibit = false          # whether to ignore systemd-inhibit --what=idle inhibitors
# }

# listener {
#     timeout = 10                            # in seconds
#     on-timeout = notify-send "You are idle!" # command to run when timeout has passed
#     on-resume = notify-send "Welcome back!"  # command to run when activity is detected after timeout has fired.
# }

general {
    lock_cmd = swaylock --image /home/default/.cache/wallpaper/cur_wal_blur.png           
    before_sleep_cmd = loginctl lock-session && sleep 2        # lock before suspend.
    after_sleep_cmd = hyprctl dispatch dpms on      # to avoid having to press a key twice to turn on the display.
}

# listener {
#     timeout = 1800                                
#     on-timeout = loginctl lock-session              # lock screen when timeout has passed
# }

listener {
    timeout = 300                                 
    on-timeout = hyprctl dispatch dpms off          # screen off when timeout has passed
    on-resume = hyprctl dispatch dpms on            # screen on when activity is detected after timeout has fired.
}

listener {
    timeout = 900
    on-timeout = systemctl suspend                  # suspend pc
}
